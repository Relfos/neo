// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: database.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from database.proto</summary>
public static partial class DatabaseReflection {

  #region Descriptor
  /// <summary>File descriptor for database.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DatabaseReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5kYXRhYmFzZS5wcm90byKjAgoMZGF0YWJhc2VfbXNnEiAKBmhlYWRlchgC",
          "IAEoCzIQLmRhdGFiYXNlX2hlYWRlchIiCgZjcmVhdGUYCiABKAsyEC5kYXRh",
          "YmFzZV9jcmVhdGVIABIeCgRyZWFkGAsgASgLMg4uZGF0YWJhc2VfcmVhZEgA",
          "EiIKBnVwZGF0ZRgMIAEoCzIQLmRhdGFiYXNlX3VwZGF0ZUgAEiIKBmRlbGV0",
          "ZRgNIAEoCzIQLmRhdGFiYXNlX2RlbGV0ZUgAEhwKA2hhcxgOIAEoCzINLmRh",
          "dGFiYXNlX2hhc0gAEh8KBGtleXMYDyABKAsyDy5kYXRhYmFzZV9lbXB0eUgA",
          "Eh8KBHNpemUYECABKAsyDy5kYXRhYmFzZV9lbXB0eUgAQgUKA21zZyJuChpk",
          "YXRhYmFzZV9yZWRpcmVjdF9yZXNwb25zZRIRCglsZWFkZXJfaWQYASABKAkS",
          "EwoLbGVhZGVyX25hbWUYAiABKAkSEwoLbGVhZGVyX2hvc3QYAyABKAkSEwoL",
          "bGVhZGVyX3BvcnQYBCABKA0iOgoPZGF0YWJhc2VfaGVhZGVyEg8KB2RiX3V1",
          "aWQYASABKAkSFgoOdHJhbnNhY3Rpb25faWQYAiABKAQiLQoPZGF0YWJhc2Vf",
          "Y3JlYXRlEgsKA2tleRgCIAEoCRINCgV2YWx1ZRgDIAEoDCIcCg1kYXRhYmFz",
          "ZV9yZWFkEgsKA2tleRgCIAEoCSItCg9kYXRhYmFzZV91cGRhdGUSCwoDa2V5",
          "GAIgASgJEg0KBXZhbHVlGAMgASgMIh4KD2RhdGFiYXNlX2RlbGV0ZRILCgNr",
          "ZXkYAiABKAkiGwoMZGF0YWJhc2VfaGFzEgsKA2tleRgCIAEoCSIQCg5kYXRh",
          "YmFzZV9lbXB0eSLxAQoRZGF0YWJhc2VfcmVzcG9uc2USIAoGaGVhZGVyGAEg",
          "ASgLMhAuZGF0YWJhc2VfaGVhZGVyEi8KCHJlZGlyZWN0GAIgASgLMhsuZGF0",
          "YWJhc2VfcmVkaXJlY3RfcmVzcG9uc2VIABIrCgRyZXNwGAMgASgLMhsuZGF0",
          "YWJhc2VfcmVzcG9uc2UucmVzcG9uc2VIABpRCghyZXNwb25zZRINCgV2YWx1",
          "ZRgEIAEoDBILCgNoYXMYBSABKAgSDAoEc2l6ZRgGIAEoBRINCgVlcnJvchgH",
          "IAEoCRIMCgRrZXlzGAggAygJQgkKB3N1Y2Nlc3NiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::database_msg), global::database_msg.Parser, new[]{ "Header", "Create", "Read", "Update", "Delete", "Has", "Keys", "Size" }, new[]{ "Msg" }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_redirect_response), global::database_redirect_response.Parser, new[]{ "LeaderId", "LeaderName", "LeaderHost", "LeaderPort" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_header), global::database_header.Parser, new[]{ "DbUuid", "TransactionId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_create), global::database_create.Parser, new[]{ "Key", "Value" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_read), global::database_read.Parser, new[]{ "Key" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_update), global::database_update.Parser, new[]{ "Key", "Value" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_delete), global::database_delete.Parser, new[]{ "Key" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_has), global::database_has.Parser, new[]{ "Key" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_empty), global::database_empty.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::database_response), global::database_response.Parser, new[]{ "Header", "Redirect", "Resp" }, new[]{ "Success" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::database_response.Types.response), global::database_response.Types.response.Parser, new[]{ "Value", "Has", "Size", "Error", "Keys" }, null, null, null)})
        }));
  }
  #endregion

}
#region Messages
public sealed partial class database_msg : pb::IMessage<database_msg> {
  private static readonly pb::MessageParser<database_msg> _parser = new pb::MessageParser<database_msg>(() => new database_msg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_msg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_msg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_msg(database_msg other) : this() {
    Header = other.header_ != null ? other.Header.Clone() : null;
    switch (other.MsgCase) {
      case MsgOneofCase.Create:
        Create = other.Create.Clone();
        break;
      case MsgOneofCase.Read:
        Read = other.Read.Clone();
        break;
      case MsgOneofCase.Update:
        Update = other.Update.Clone();
        break;
      case MsgOneofCase.Delete:
        Delete = other.Delete.Clone();
        break;
      case MsgOneofCase.Has:
        Has = other.Has.Clone();
        break;
      case MsgOneofCase.Keys:
        Keys = other.Keys.Clone();
        break;
      case MsgOneofCase.Size:
        Size = other.Size.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_msg Clone() {
    return new database_msg(this);
  }

  /// <summary>Field number for the "header" field.</summary>
  public const int HeaderFieldNumber = 2;
  private global::database_header header_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_header Header {
    get { return header_; }
    set {
      header_ = value;
    }
  }

  /// <summary>Field number for the "create" field.</summary>
  public const int CreateFieldNumber = 10;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_create Create {
    get { return msgCase_ == MsgOneofCase.Create ? (global::database_create) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Create;
    }
  }

  /// <summary>Field number for the "read" field.</summary>
  public const int ReadFieldNumber = 11;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_read Read {
    get { return msgCase_ == MsgOneofCase.Read ? (global::database_read) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Read;
    }
  }

  /// <summary>Field number for the "update" field.</summary>
  public const int UpdateFieldNumber = 12;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_update Update {
    get { return msgCase_ == MsgOneofCase.Update ? (global::database_update) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Update;
    }
  }

  /// <summary>Field number for the "delete" field.</summary>
  public const int DeleteFieldNumber = 13;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_delete Delete {
    get { return msgCase_ == MsgOneofCase.Delete ? (global::database_delete) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Delete;
    }
  }

  /// <summary>Field number for the "has" field.</summary>
  public const int HasFieldNumber = 14;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_has Has {
    get { return msgCase_ == MsgOneofCase.Has ? (global::database_has) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Has;
    }
  }

  /// <summary>Field number for the "keys" field.</summary>
  public const int KeysFieldNumber = 15;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_empty Keys {
    get { return msgCase_ == MsgOneofCase.Keys ? (global::database_empty) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Keys;
    }
  }

  /// <summary>Field number for the "size" field.</summary>
  public const int SizeFieldNumber = 16;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_empty Size {
    get { return msgCase_ == MsgOneofCase.Size ? (global::database_empty) msg_ : null; }
    set {
      msg_ = value;
      msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Size;
    }
  }

  private object msg_;
  /// <summary>Enum of possible cases for the "msg" oneof.</summary>
  public enum MsgOneofCase {
    None = 0,
    Create = 10,
    Read = 11,
    Update = 12,
    Delete = 13,
    Has = 14,
    Keys = 15,
    Size = 16,
  }
  private MsgOneofCase msgCase_ = MsgOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOneofCase MsgCase {
    get { return msgCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearMsg() {
    msgCase_ = MsgOneofCase.None;
    msg_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_msg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_msg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Header, other.Header)) return false;
    if (!object.Equals(Create, other.Create)) return false;
    if (!object.Equals(Read, other.Read)) return false;
    if (!object.Equals(Update, other.Update)) return false;
    if (!object.Equals(Delete, other.Delete)) return false;
    if (!object.Equals(Has, other.Has)) return false;
    if (!object.Equals(Keys, other.Keys)) return false;
    if (!object.Equals(Size, other.Size)) return false;
    if (MsgCase != other.MsgCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (header_ != null) hash ^= Header.GetHashCode();
    if (msgCase_ == MsgOneofCase.Create) hash ^= Create.GetHashCode();
    if (msgCase_ == MsgOneofCase.Read) hash ^= Read.GetHashCode();
    if (msgCase_ == MsgOneofCase.Update) hash ^= Update.GetHashCode();
    if (msgCase_ == MsgOneofCase.Delete) hash ^= Delete.GetHashCode();
    if (msgCase_ == MsgOneofCase.Has) hash ^= Has.GetHashCode();
    if (msgCase_ == MsgOneofCase.Keys) hash ^= Keys.GetHashCode();
    if (msgCase_ == MsgOneofCase.Size) hash ^= Size.GetHashCode();
    hash ^= (int) msgCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (header_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Header);
    }
    if (msgCase_ == MsgOneofCase.Create) {
      output.WriteRawTag(82);
      output.WriteMessage(Create);
    }
    if (msgCase_ == MsgOneofCase.Read) {
      output.WriteRawTag(90);
      output.WriteMessage(Read);
    }
    if (msgCase_ == MsgOneofCase.Update) {
      output.WriteRawTag(98);
      output.WriteMessage(Update);
    }
    if (msgCase_ == MsgOneofCase.Delete) {
      output.WriteRawTag(106);
      output.WriteMessage(Delete);
    }
    if (msgCase_ == MsgOneofCase.Has) {
      output.WriteRawTag(114);
      output.WriteMessage(Has);
    }
    if (msgCase_ == MsgOneofCase.Keys) {
      output.WriteRawTag(122);
      output.WriteMessage(Keys);
    }
    if (msgCase_ == MsgOneofCase.Size) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(Size);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (header_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
    }
    if (msgCase_ == MsgOneofCase.Create) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Create);
    }
    if (msgCase_ == MsgOneofCase.Read) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Read);
    }
    if (msgCase_ == MsgOneofCase.Update) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
    }
    if (msgCase_ == MsgOneofCase.Delete) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Delete);
    }
    if (msgCase_ == MsgOneofCase.Has) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Has);
    }
    if (msgCase_ == MsgOneofCase.Keys) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Keys);
    }
    if (msgCase_ == MsgOneofCase.Size) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Size);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_msg other) {
    if (other == null) {
      return;
    }
    if (other.header_ != null) {
      if (header_ == null) {
        header_ = new global::database_header();
      }
      Header.MergeFrom(other.Header);
    }
    switch (other.MsgCase) {
      case MsgOneofCase.Create:
        if (Create == null) {
          Create = new global::database_create();
        }
        Create.MergeFrom(other.Create);
        break;
      case MsgOneofCase.Read:
        if (Read == null) {
          Read = new global::database_read();
        }
        Read.MergeFrom(other.Read);
        break;
      case MsgOneofCase.Update:
        if (Update == null) {
          Update = new global::database_update();
        }
        Update.MergeFrom(other.Update);
        break;
      case MsgOneofCase.Delete:
        if (Delete == null) {
          Delete = new global::database_delete();
        }
        Delete.MergeFrom(other.Delete);
        break;
      case MsgOneofCase.Has:
        if (Has == null) {
          Has = new global::database_has();
        }
        Has.MergeFrom(other.Has);
        break;
      case MsgOneofCase.Keys:
        if (Keys == null) {
          Keys = new global::database_empty();
        }
        Keys.MergeFrom(other.Keys);
        break;
      case MsgOneofCase.Size:
        if (Size == null) {
          Size = new global::database_empty();
        }
        Size.MergeFrom(other.Size);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          if (header_ == null) {
            header_ = new global::database_header();
          }
          input.ReadMessage(header_);
          break;
        }
        case 82: {
          global::database_create subBuilder = new global::database_create();
          if (msgCase_ == MsgOneofCase.Create) {
            subBuilder.MergeFrom(Create);
          }
          input.ReadMessage(subBuilder);
          Create = subBuilder;
          break;
        }
        case 90: {
          global::database_read subBuilder = new global::database_read();
          if (msgCase_ == MsgOneofCase.Read) {
            subBuilder.MergeFrom(Read);
          }
          input.ReadMessage(subBuilder);
          Read = subBuilder;
          break;
        }
        case 98: {
          global::database_update subBuilder = new global::database_update();
          if (msgCase_ == MsgOneofCase.Update) {
            subBuilder.MergeFrom(Update);
          }
          input.ReadMessage(subBuilder);
          Update = subBuilder;
          break;
        }
        case 106: {
          global::database_delete subBuilder = new global::database_delete();
          if (msgCase_ == MsgOneofCase.Delete) {
            subBuilder.MergeFrom(Delete);
          }
          input.ReadMessage(subBuilder);
          Delete = subBuilder;
          break;
        }
        case 114: {
          global::database_has subBuilder = new global::database_has();
          if (msgCase_ == MsgOneofCase.Has) {
            subBuilder.MergeFrom(Has);
          }
          input.ReadMessage(subBuilder);
          Has = subBuilder;
          break;
        }
        case 122: {
          global::database_empty subBuilder = new global::database_empty();
          if (msgCase_ == MsgOneofCase.Keys) {
            subBuilder.MergeFrom(Keys);
          }
          input.ReadMessage(subBuilder);
          Keys = subBuilder;
          break;
        }
        case 130: {
          global::database_empty subBuilder = new global::database_empty();
          if (msgCase_ == MsgOneofCase.Size) {
            subBuilder.MergeFrom(Size);
          }
          input.ReadMessage(subBuilder);
          Size = subBuilder;
          break;
        }
      }
    }
  }

}

public sealed partial class database_redirect_response : pb::IMessage<database_redirect_response> {
  private static readonly pb::MessageParser<database_redirect_response> _parser = new pb::MessageParser<database_redirect_response>(() => new database_redirect_response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_redirect_response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_redirect_response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_redirect_response(database_redirect_response other) : this() {
    leaderId_ = other.leaderId_;
    leaderName_ = other.leaderName_;
    leaderHost_ = other.leaderHost_;
    leaderPort_ = other.leaderPort_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_redirect_response Clone() {
    return new database_redirect_response(this);
  }

  /// <summary>Field number for the "leader_id" field.</summary>
  public const int LeaderIdFieldNumber = 1;
  private string leaderId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderId {
    get { return leaderId_; }
    set {
      leaderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "leader_name" field.</summary>
  public const int LeaderNameFieldNumber = 2;
  private string leaderName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderName {
    get { return leaderName_; }
    set {
      leaderName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "leader_host" field.</summary>
  public const int LeaderHostFieldNumber = 3;
  private string leaderHost_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LeaderHost {
    get { return leaderHost_; }
    set {
      leaderHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "leader_port" field.</summary>
  public const int LeaderPortFieldNumber = 4;
  private uint leaderPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint LeaderPort {
    get { return leaderPort_; }
    set {
      leaderPort_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_redirect_response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_redirect_response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LeaderId != other.LeaderId) return false;
    if (LeaderName != other.LeaderName) return false;
    if (LeaderHost != other.LeaderHost) return false;
    if (LeaderPort != other.LeaderPort) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (LeaderId.Length != 0) hash ^= LeaderId.GetHashCode();
    if (LeaderName.Length != 0) hash ^= LeaderName.GetHashCode();
    if (LeaderHost.Length != 0) hash ^= LeaderHost.GetHashCode();
    if (LeaderPort != 0) hash ^= LeaderPort.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (LeaderId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(LeaderId);
    }
    if (LeaderName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LeaderName);
    }
    if (LeaderHost.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(LeaderHost);
    }
    if (LeaderPort != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(LeaderPort);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (LeaderId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderId);
    }
    if (LeaderName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderName);
    }
    if (LeaderHost.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderHost);
    }
    if (LeaderPort != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeaderPort);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_redirect_response other) {
    if (other == null) {
      return;
    }
    if (other.LeaderId.Length != 0) {
      LeaderId = other.LeaderId;
    }
    if (other.LeaderName.Length != 0) {
      LeaderName = other.LeaderName;
    }
    if (other.LeaderHost.Length != 0) {
      LeaderHost = other.LeaderHost;
    }
    if (other.LeaderPort != 0) {
      LeaderPort = other.LeaderPort;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          LeaderId = input.ReadString();
          break;
        }
        case 18: {
          LeaderName = input.ReadString();
          break;
        }
        case 26: {
          LeaderHost = input.ReadString();
          break;
        }
        case 32: {
          LeaderPort = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class database_header : pb::IMessage<database_header> {
  private static readonly pb::MessageParser<database_header> _parser = new pb::MessageParser<database_header>(() => new database_header());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_header> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_header() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_header(database_header other) : this() {
    dbUuid_ = other.dbUuid_;
    transactionId_ = other.transactionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_header Clone() {
    return new database_header(this);
  }

  /// <summary>Field number for the "db_uuid" field.</summary>
  public const int DbUuidFieldNumber = 1;
  private string dbUuid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string DbUuid {
    get { return dbUuid_; }
    set {
      dbUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "transaction_id" field.</summary>
  public const int TransactionIdFieldNumber = 2;
  private ulong transactionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong TransactionId {
    get { return transactionId_; }
    set {
      transactionId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_header);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_header other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DbUuid != other.DbUuid) return false;
    if (TransactionId != other.TransactionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DbUuid.Length != 0) hash ^= DbUuid.GetHashCode();
    if (TransactionId != 0UL) hash ^= TransactionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DbUuid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(DbUuid);
    }
    if (TransactionId != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(TransactionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DbUuid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DbUuid);
    }
    if (TransactionId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TransactionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_header other) {
    if (other == null) {
      return;
    }
    if (other.DbUuid.Length != 0) {
      DbUuid = other.DbUuid;
    }
    if (other.TransactionId != 0UL) {
      TransactionId = other.TransactionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          DbUuid = input.ReadString();
          break;
        }
        case 16: {
          TransactionId = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class database_create : pb::IMessage<database_create> {
  private static readonly pb::MessageParser<database_create> _parser = new pb::MessageParser<database_create>(() => new database_create());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_create> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_create() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_create(database_create other) : this() {
    key_ = other.key_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_create Clone() {
    return new database_create(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 2;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 3;
  private pb::ByteString value_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_create);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_create other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Key.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Key);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_create other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Key = input.ReadString();
          break;
        }
        case 26: {
          Value = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class database_read : pb::IMessage<database_read> {
  private static readonly pb::MessageParser<database_read> _parser = new pb::MessageParser<database_read>(() => new database_read());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_read> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_read() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_read(database_read other) : this() {
    key_ = other.key_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_read Clone() {
    return new database_read(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 2;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_read);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_read other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Key.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Key);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_read other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Key = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class database_update : pb::IMessage<database_update> {
  private static readonly pb::MessageParser<database_update> _parser = new pb::MessageParser<database_update>(() => new database_update());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_update> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_update() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_update(database_update other) : this() {
    key_ = other.key_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_update Clone() {
    return new database_update(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 2;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 3;
  private pb::ByteString value_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_update);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_update other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Key.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Key);
    }
    if (Value.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_update other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Key = input.ReadString();
          break;
        }
        case 26: {
          Value = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class database_delete : pb::IMessage<database_delete> {
  private static readonly pb::MessageParser<database_delete> _parser = new pb::MessageParser<database_delete>(() => new database_delete());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_delete> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_delete() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_delete(database_delete other) : this() {
    key_ = other.key_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_delete Clone() {
    return new database_delete(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 2;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_delete);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_delete other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Key.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Key);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_delete other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Key = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class database_has : pb::IMessage<database_has> {
  private static readonly pb::MessageParser<database_has> _parser = new pb::MessageParser<database_has>(() => new database_has());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_has> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_has() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_has(database_has other) : this() {
    key_ = other.key_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_has Clone() {
    return new database_has(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 2;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_has);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_has other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Key.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Key);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_has other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Key = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class database_empty : pb::IMessage<database_empty> {
  private static readonly pb::MessageParser<database_empty> _parser = new pb::MessageParser<database_empty>(() => new database_empty());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_empty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_empty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_empty(database_empty other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_empty Clone() {
    return new database_empty(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_empty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_empty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_empty other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class database_response : pb::IMessage<database_response> {
  private static readonly pb::MessageParser<database_response> _parser = new pb::MessageParser<database_response>(() => new database_response());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<database_response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DatabaseReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_response(database_response other) : this() {
    Header = other.header_ != null ? other.Header.Clone() : null;
    switch (other.SuccessCase) {
      case SuccessOneofCase.Redirect:
        Redirect = other.Redirect.Clone();
        break;
      case SuccessOneofCase.Resp:
        Resp = other.Resp.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public database_response Clone() {
    return new database_response(this);
  }

  /// <summary>Field number for the "header" field.</summary>
  public const int HeaderFieldNumber = 1;
  private global::database_header header_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_header Header {
    get { return header_; }
    set {
      header_ = value;
    }
  }

  /// <summary>Field number for the "redirect" field.</summary>
  public const int RedirectFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_redirect_response Redirect {
    get { return successCase_ == SuccessOneofCase.Redirect ? (global::database_redirect_response) success_ : null; }
    set {
      success_ = value;
      successCase_ = value == null ? SuccessOneofCase.None : SuccessOneofCase.Redirect;
    }
  }

  /// <summary>Field number for the "resp" field.</summary>
  public const int RespFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::database_response.Types.response Resp {
    get { return successCase_ == SuccessOneofCase.Resp ? (global::database_response.Types.response) success_ : null; }
    set {
      success_ = value;
      successCase_ = value == null ? SuccessOneofCase.None : SuccessOneofCase.Resp;
    }
  }

  private object success_;
  /// <summary>Enum of possible cases for the "success" oneof.</summary>
  public enum SuccessOneofCase {
    None = 0,
    Redirect = 2,
    Resp = 3,
  }
  private SuccessOneofCase successCase_ = SuccessOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SuccessOneofCase SuccessCase {
    get { return successCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearSuccess() {
    successCase_ = SuccessOneofCase.None;
    success_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as database_response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(database_response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Header, other.Header)) return false;
    if (!object.Equals(Redirect, other.Redirect)) return false;
    if (!object.Equals(Resp, other.Resp)) return false;
    if (SuccessCase != other.SuccessCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (header_ != null) hash ^= Header.GetHashCode();
    if (successCase_ == SuccessOneofCase.Redirect) hash ^= Redirect.GetHashCode();
    if (successCase_ == SuccessOneofCase.Resp) hash ^= Resp.GetHashCode();
    hash ^= (int) successCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (header_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Header);
    }
    if (successCase_ == SuccessOneofCase.Redirect) {
      output.WriteRawTag(18);
      output.WriteMessage(Redirect);
    }
    if (successCase_ == SuccessOneofCase.Resp) {
      output.WriteRawTag(26);
      output.WriteMessage(Resp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (header_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
    }
    if (successCase_ == SuccessOneofCase.Redirect) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Redirect);
    }
    if (successCase_ == SuccessOneofCase.Resp) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(database_response other) {
    if (other == null) {
      return;
    }
    if (other.header_ != null) {
      if (header_ == null) {
        header_ = new global::database_header();
      }
      Header.MergeFrom(other.Header);
    }
    switch (other.SuccessCase) {
      case SuccessOneofCase.Redirect:
        if (Redirect == null) {
          Redirect = new global::database_redirect_response();
        }
        Redirect.MergeFrom(other.Redirect);
        break;
      case SuccessOneofCase.Resp:
        if (Resp == null) {
          Resp = new global::database_response.Types.response();
        }
        Resp.MergeFrom(other.Resp);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (header_ == null) {
            header_ = new global::database_header();
          }
          input.ReadMessage(header_);
          break;
        }
        case 18: {
          global::database_redirect_response subBuilder = new global::database_redirect_response();
          if (successCase_ == SuccessOneofCase.Redirect) {
            subBuilder.MergeFrom(Redirect);
          }
          input.ReadMessage(subBuilder);
          Redirect = subBuilder;
          break;
        }
        case 26: {
          global::database_response.Types.response subBuilder = new global::database_response.Types.response();
          if (successCase_ == SuccessOneofCase.Resp) {
            subBuilder.MergeFrom(Resp);
          }
          input.ReadMessage(subBuilder);
          Resp = subBuilder;
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the database_response message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public sealed partial class response : pb::IMessage<response> {
      private static readonly pb::MessageParser<response> _parser = new pb::MessageParser<response>(() => new response());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pb::MessageParser<response> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::database_response.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public response() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public response(response other) : this() {
        value_ = other.value_;
        has_ = other.has_;
        size_ = other.size_;
        error_ = other.error_;
        keys_ = other.keys_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public response Clone() {
        return new response(this);
      }

      /// <summary>Field number for the "value" field.</summary>
      public const int ValueFieldNumber = 4;
      private pb::ByteString value_ = pb::ByteString.Empty;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pb::ByteString Value {
        get { return value_; }
        set {
          value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "has" field.</summary>
      public const int HasFieldNumber = 5;
      private bool has_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Has {
        get { return has_; }
        set {
          has_ = value;
        }
      }

      /// <summary>Field number for the "size" field.</summary>
      public const int SizeFieldNumber = 6;
      private int size_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int Size {
        get { return size_; }
        set {
          size_ = value;
        }
      }

      /// <summary>Field number for the "error" field.</summary>
      public const int ErrorFieldNumber = 7;
      private string error_ = "";
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public string Error {
        get { return error_; }
        set {
          error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }

      /// <summary>Field number for the "keys" field.</summary>
      public const int KeysFieldNumber = 8;
      private static readonly pb::FieldCodec<string> _repeated_keys_codec
          = pb::FieldCodec.ForString(66);
      private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public pbc::RepeatedField<string> Keys {
        get { return keys_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override bool Equals(object other) {
        return Equals(other as response);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public bool Equals(response other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Value != other.Value) return false;
        if (Has != other.Has) return false;
        if (Size != other.Size) return false;
        if (Error != other.Error) return false;
        if(!keys_.Equals(other.keys_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override int GetHashCode() {
        int hash = 1;
        if (Value.Length != 0) hash ^= Value.GetHashCode();
        if (Has != false) hash ^= Has.GetHashCode();
        if (Size != 0) hash ^= Size.GetHashCode();
        if (Error.Length != 0) hash ^= Error.GetHashCode();
        hash ^= keys_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void WriteTo(pb::CodedOutputStream output) {
        if (Value.Length != 0) {
          output.WriteRawTag(34);
          output.WriteBytes(Value);
        }
        if (Has != false) {
          output.WriteRawTag(40);
          output.WriteBool(Has);
        }
        if (Size != 0) {
          output.WriteRawTag(48);
          output.WriteInt32(Size);
        }
        if (Error.Length != 0) {
          output.WriteRawTag(58);
          output.WriteString(Error);
        }
        keys_.WriteTo(output, _repeated_keys_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public int CalculateSize() {
        int size = 0;
        if (Value.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
        }
        if (Has != false) {
          size += 1 + 1;
        }
        if (Size != 0) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
        }
        if (Error.Length != 0) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
        }
        size += keys_.CalculateSize(_repeated_keys_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(response other) {
        if (other == null) {
          return;
        }
        if (other.Value.Length != 0) {
          Value = other.Value;
        }
        if (other.Has != false) {
          Has = other.Has;
        }
        if (other.Size != 0) {
          Size = other.Size;
        }
        if (other.Error.Length != 0) {
          Error = other.Error;
        }
        keys_.Add(other.keys_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      public void MergeFrom(pb::CodedInputStream input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 34: {
              Value = input.ReadBytes();
              break;
            }
            case 40: {
              Has = input.ReadBool();
              break;
            }
            case 48: {
              Size = input.ReadInt32();
              break;
            }
            case 58: {
              Error = input.ReadString();
              break;
            }
            case 66: {
              keys_.AddEntriesFrom(input, _repeated_keys_codec);
              break;
            }
          }
        }
      }

    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
